@page "/products"
@using Microsoft.AspNetCore.Http;
@using Microsoft.AspNetCore.Identity
@using ProDiet.Data.Enums
@using ProDiet.Models
@using ProDiet.Pages.Components
@using ProDiet.Services
@inject UserManager<IdentityUser> userManager
@inject IProductStoresService iProductStoresService
@inject IHttpContextAccessor httpContextAccessor
@inject NavigationManager navigationManager
@inject IDialogService DialogService


<h3>Produkty</h3>

<MudButton @onclick="OpenDialog"  Variant="Variant.Filled" Color="Color.Primary">
    Dodaj nowy produkt
</MudButton>

@if (_products == null)
{
    <p> Nie dodałeś jeszcze żadnych produktów</p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Nazwa</th>
            <th>Kaloryka</th>
            <th>Węglowodany</th>
            <th>Tłuszcz</th>
            <th>Białko</th>
            <th>Błonnik</th>
            <th>Kategoria</th>
            <th>&nbsp;</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var _product in _products)
        {
            <tr>
                <td>@_product.ProductName</td>
                <td>@_product.Calories</td>
                <td>@_product.Carbohydrates</td>
                <td>@_product.Fats</td>
                <td>@_product.Proteins</td>
                <td>@_product.Fiber</td>
                <td>@_product.ProductCategory</td>
                <MudButton Variant="Variant.Filled" Color="Color.Success" @onclick="@(()=>navigationManager.NavigateTo($"/products/edit/{_product.ProductId}"))"> Edytuj produkt</MudButton>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    private List<Models.Product> _products;
    private Models.Product _product;
    

    public bool AddProductDialogOpen { get; set; }

    

    //private async Task LoadProducts(string userId)
    //{
    //    _products = await iProductStoresService.GetAllUsersProducts(userId);
    //}



    protected override async Task OnInitializedAsync()
    {
        var user = httpContextAccessor.HttpContext.User;
        var id = userManager.GetUserId(user);
        //_products = await iProductStoresService.GetAllUsersProducts(id);
        _products = await iProductStoresService.GetAllProducts();
        await base.OnInitializedAsync();
    }

    private async Task Reload()
    {
        _products = await iProductStoresService.GetAllProducts();
        await this.InvokeAsync(StateHasChanged);
    }

    private async Task OpenDialog()
    {    
        DialogOptions closeOnEscapeKey = new DialogOptions() { CloseOnEscapeKey = true };

        var dialog=DialogService.Show<ProductsCreateDialog>("Dodaj nowy produkt", closeOnEscapeKey);
        var resultDishId = await dialog.Result;
        if (resultDishId!=null)
        {
            await Reload();
        }

    }
}


