@page "/patients"
@using ProDiet.Services
@using Microsoft.AspNetCore.Components
@using ProDiet.Models
@using Microsoft.AspNetCore.Identity;
@using System.Security.Claims
@using Microsoft.AspNetCore.Http;
@using ProDiet.Data.Enums
@using ProDiet.Pages.Components
@inject UserManager<IdentityUser> userManager;
@inject IPatientStoresService iPatientStoresService;
@inject IHttpContextAccessor httpContextAccessor
@inject NavigationManager navigationManager;


<button type="button" class="btn btn-primary" data-toggle="modal" @onclick="()=>OpenDialog()">
    Dodaj nowego pacjenta
</button>

@if (_patients == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Imię</th>
            <th>Nazwisko</th>
            <th>Email</th>
            <th>Numer Telefonu</th>
            <th>Data dodania</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var _patient in _patients)
        {
            <tr>
                <td>@_patient.FirstName</td>
                <td>@_patient.LastName</td>
                <td>@_patient.Email</td>
                <td>@_patient.PhoneNumber</td>
                <td>@_patient.CreatedAt.ToShortDateString()</td>
            </tr>
        }
        </tbody>
    </table>
}




@if (DialogOpen)
{
    <AddPatientModal  OnClose="@OnDialogClose"></AddPatientModal>
}



@code
{

    private List<ProDiet.Models.Patient> _patients;

    public bool DialogOpen { get; set; }

    private void OnDialogClose(bool accepted)
    {
        DialogOpen = false;
        StateHasChanged();
        OnInitialized();
    }

    private void OpenDialog()
    {
        DialogOpen = true;
        StateHasChanged();
    }



    protected override void OnInitialized( )
    {
        var user = httpContextAccessor.HttpContext.User;
        var id = userManager.GetUserId(user);
        _patients = iPatientStoresService.GetAllUsersPatients(id);
        base.OnInitialized();
    }

    

    

}
