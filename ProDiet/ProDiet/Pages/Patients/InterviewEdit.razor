@page "/patientdetails/{PatientId:int}/Interview"
@using Microsoft.AspNetCore.Identity
@using ProDiet.Data.Enums
@using ProDiet.Models
@using ProDiet.Services
@inject NavigationManager navigationManager;
@inject UserManager<IdentityUser> userManager;
@inject IPatientStoresService iPatientStoresService;
@inject IInterviewStoresService iInterviewStoresService;
@inject IHttpContextAccessor httpContextAccessor;

@*//Do zrobienia*@

<div id="border">
<h3>Edytuj wywiad żywieniowy pacjenta :</h3>
@if (_patient == null)
{
    <p><em>Nie możesz dodać planu żywieniowego dla tego pacjenta</em></p>
}
else
{
    
    <MudCard>
    <div class="card-header">
        <div class="d-inline-block">Wywiad - Profil</div>
    </div>
    <EditForm Model="_interview" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator/>
    <ValidationSummary/>
    <MudCard>
    <MudTextField @bind-Value="_interview.VisitReason"
                  For="@(() => _interview.VisitReason)"
                  Immediate="true"
                  Label="Powód wizyty"
                  Lines="4"
    />

                
    <MudTextField @bind-Value="_interview.Goals"
                  For="@(() => _interview.Goals)"
                  Immediate="true"
                  Label="Cele"
                  Lines="4"/>
                

    <MudTextField @bind-Value="_interview.PhysicalActivity"
                  For="@(() => _interview.PhysicalActivity)"
                  Immediate="true"
                  Label="Aktywność fizyczna"
                  Lines="4"/>

    <MudTextField @bind-Value="_interview.VisitGoal"
                  For="@(() => _interview.VisitGoal)"
                  Immediate="true"
                  Label="Jaki jest cel wizyty?"
                  Lines="4"/>
                

    <MudTextField @bind-Value="_interview.Diseases"
                  For="@(() => _interview.Diseases)"
                  Immediate="true"
                  Label="Czy Klient cierpi na jakąś chorobę przewlekłą?"
                  Lines="4"/>
                                

    <MudTextField @bind-Value="_interview.Suplementation"
                  For="@(() => _interview.Suplementation)"
                  Immediate="true"
                  Label="Jakie leki lub suplementy diety Klient przyjmuje? W jakich dawkach?"
                  Lines="4"/>
                
    <MudInputLabel>Stopień aktywności fizycznej według Wskaźnika Aktywności Fizycznej PAL</MudInputLabel>

    <MudRadioGroup @bind-SelectedOption="_interview.PALActivity"
    >
        <MudRadio Placement="Placement.Top" Option="1">1,2 - 1,3 - dla Klienta chorego, leżącego w łóżku - brak aktywności</MudRadio>
        <MudRadio Placement="Placement.Top" Option="2">1,4 - dla niskiej aktywności fizycznej - sporadyczna aktywność w m-cu</MudRadio>
        <MudRadio Placement="Placement.Top" Option="3">1,6 - dla umiarkowanej aktywności fizycznej - sporadyczna aktywność w tygodniu</MudRadio>
        <MudRadio Placement="Placement.Top" Option="4">1,75 - aktywny tryb życia (ok. 30 min 1-2x/tydz.)</MudRadio>
        <MudRadio Placement="Placement.Top" Option="5">2 - bardzo aktywny tryb życia (ok. 30 min 3-4x/tydz.)</MudRadio>
        <MudRadio Placement="Placement.Top" Option="6">2,2 - 2,4 - wyczynowe uprawianie sportu - codzienne treningi</MudRadio>
    </MudRadioGroup>
                
    <MudTextField @bind-Value="_interview.FamilyDiseases"
                  For="@(() => _interview.FamilyDiseases)"
                  Immediate="true"
                  Label="Obciążenie chorobami w rodzinie w linii prostej"
                  Lines="4"/>
                
    <MudTextField @bind-Value="_interview.DigestiveDiseases"
                  For="@(() => _interview.DigestiveDiseases)"
                  Immediate="true"
                  Label="Schorzenia ze strony układu pokarmowego"
                  Lines="4"/>
                
                
    <MudTextField @bind-Value="_interview.HealthProblems"
                  For="@(() => _interview.HealthProblems)"
                  Immediate="true"
                  Label="Problemy zdrowotne występujące u Klienta?"
                  Lines="4"/>
                
    <MudTextField @bind-Value="_interview.DietHistory"
                  For="@(() => _interview.DietHistory)"
                  Immediate="true"
                  Label="Jakie diety Klient stosował/stosuje?"
                  Lines="4"/>
                

    <MudTextField @bind-Value="_interview.Profession"
                  For="@(() => _interview.Profession)"
                  Immediate="true"
                  Label="Wykonywany zawód?"
                  Lines="4"/>

    <MudInputLabel>Czy w pracy jest możliwość podgrzania posiłków?</MudInputLabel>
    <MudRadioGroup @bind-SelectedOption="_interview.FoodHeatingAbility"
                   For="() => _interview.FoodHeatingAbility">
        <MudRadio Placement="Placement.Top" Option="true">Tak</MudRadio>
        <MudRadio Placement="Placement.Top" Option="false">Nie</MudRadio>
    </MudRadioGroup>
                
    <MudTextField @bind-Value="_interview.TypicalEatingShedules"
                  For="@(() => _interview.TypicalEatingShedules)"
                  Immediate="true"
                  Label="O jakiej porze Klient najczęściej spożywa następujące posiłki?"
                  Lines="4"/>
                
                
    <MudTextField @bind-Value="_interview.LastMealTime"
                  For="@(() => _interview.LastMealTime)"
                  Immediate="true"
                  Label="Ile godzin przed snem Klient zjada ostatni posiłek?"
                  Lines="4"/>

                
    <MudTextField @bind-Value="_interview.DailySnacksAmount"
                  For="@(() => _interview.DailySnacksAmount)"
                  Immediate="true"
                  Label="Czy klient w ciągu dnia Klient podjada pomiędzy posiłkami?"
                  Lines="4"/>

                
    <MudTextField @bind-Value="_interview.PreferedSnacks"
                  For="@(() => _interview.PreferedSnacks)"
                  Immediate="true"
                  Label="Co zwykle Klient podjada?"
                  Lines="4"/>

                
    <MudTextField @bind-Value="_interview.TimeWhenEatsMost"
                  For="@(() => _interview.TimeWhenEatsMost)"
                  Immediate="true"
                  Label="Kiedy Klient ma największą ochotę na jedzenie?"
                  Lines="4"/>

                
    <MudTextField @bind-Value="_interview.UnlikedFoods"
                  For="@(() => _interview.UnlikedFoods)"
                  Immediate="true"
                  Label="Jakich produktów z wymienionych kategorii Klient nie lubi?"
                  Lines="4"/>

                
    <MudTextField @bind-Value="_interview.PreferedFats"
                  For="@(() => _interview.PreferedFats)"
                  Immediate="true"
                  Label="Jakie tłuszcze Klient stosuje do potraw?"
                  Lines="4"/>

                
    <MudTextField @bind-Value="_interview.PreferedBreads"
                  For="@(() => _interview.PreferedBreads)"
                  Immediate="true"
                  Label="Jakiego rodzaju pieczywo Klient spożywa?"
                  Lines="4"/>

                
    <MudTextField @bind-Value="_interview.WeeklyBread"
                  For="@(() => _interview.WeeklyBread)"
                  Immediate="true"
                  Label="Ile razy w tygodniu Klient spożywa pieczywo"
                  Lines="4"/>

                
    <MudTextField @bind-Value="_interview.PreferedCarbProducts"
                  For="@(() => _interview.PreferedCarbProducts)"
                  Immediate="true"
                  Label="Jakie produkty węglowodanowe Klient spożywa najczęściej?"
                  Lines="4"/>

                
    <MudTextField @bind-Value="_interview.WeeklyDairy"
                  For="@(() => _interview.WeeklyDairy)"
                  Immediate="true"
                  Label="Ile razy w tygodniu Klient spożywa nabiał?"
                  Lines="4"/>

                
    <MudTextField @bind-Value="_interview.PreferedDairy"
                  For="@(() => _interview.PreferedDairy)"
                  Immediate="true"
                  Label="Jakie produkty nabiałowe Klient spożywa najczęściej?"
                  Lines="4"/>

                
    <MudTextField @bind-Value="_interview.WeeklyVegetables"
                  For="@(() => _interview.WeeklyVegetables)"
                  Immediate="true"
                  Label="Ile razy w tygodniu Klient spożywa warzywa?"
                  Lines="4"/>

                
    <MudTextField @bind-Value="_interview.WeeklyFlourProducts"
                  For="@(() => _interview.WeeklyFlourProducts)"
                  Immediate="true"
                  Label="Ile razy w tygodniu Klient spożywa wyroby mączne (kluski, kopytka, pyzy, makarony)?"
                  Lines="4"/>

                
    <MudTextField @bind-Value="_interview.WeeklyMeat"
                  For="@(() => _interview.WeeklyMeat)"
                  Immediate="true"
                  Label="Ile razy w tygodniu Klient spożywa mięso?"
                  Lines="4"/>

                
    <MudTextField @bind-Value="_interview.PreferedMeat"
                  For="@(() => _interview.PreferedMeat)"
                  Immediate="true"
                  Label="Jaki rodzaj mięsa Klient spożywa najczęściej?"
                  Lines="4"/>

                
    <MudTextField @bind-Value="_interview.WeeklyFish"
                  For="@(() => _interview.WeeklyFish)"
                  Immediate="true"
                  Label="Ile razy w tygodniu Klient spożywa ryby?"
                  Lines="4"/>

                
    <MudTextField @bind-Value="_interview.PreferedFish"
                  For="@(() => _interview.PreferedFish)"
                  Immediate="true"
                  Label="Jakiego rodzaju ryby Klient spożywa najczęściej?"
                  Lines="4"/>

                
    <MudTextField @bind-Value="_interview.PreferedDrinks"
                  For="@(() => _interview.PreferedDrinks)"
                  Immediate="true"
                  Label="Jakie napoje Klient pije najczęściej?"
                  Lines="4"/>

                
    <MudTextField @bind-Value="_interview.PreferedSweeteners"
                  For="@(() => _interview.PreferedSweeteners)"
                  Immediate="true"
                  Label="Jeśli słodzi kawę i herbatę, to czym i ile?"
                  Lines="4"/>

                
    <MudTextField @bind-Value="_interview.WeeklyCandies"
                  For="@(() => _interview.WeeklyCandies)"
                  Immediate="true"
                  Label="Ile razy w tygodniu Klient spożywa słodycze lub wyroby cukiernicze?"
                  Lines="4"/>

                
    <MudTextField @bind-Value="_interview.WeeklyFastFoods"
                  For="@(() => _interview.WeeklyFastFoods)"
                  Immediate="true"
                  Label="Ile razy w tygodniu Klient spożywa potrawy typu Fast Food?"
                  Lines="4"/>

                
    <MudTextField @bind-Value="_interview.WeeklyAlkohol"
                  For="@(() => _interview.WeeklyAlkohol)"
                  Immediate="true"
                  Label="Ile razy w tygodniu Klient spożywa alkohol?"
                  Lines="4"/>

    </MudCard>

    <MudCard>
        <MudButton OnClick="Cancel">Wyjdź</MudButton>
        <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="demo-form-button">Zapisz</MudButton>
    </MudCard>   
    </EditForm>
        
        
        
        


    </MudCard>
    
   
}
</div>

@code {
    [Parameter] 
    public int patientId{ get; set; }

    private string userId{ get; set; }

    private ProDiet.Models.Patient _patient;
    private ProDiet.Models.Interview _interview= new Interview();

    private bool _checkOwner = false;


    protected override async Task OnInitializedAsync()
    {
        var user = httpContextAccessor.HttpContext.User;
        userId = userManager.GetUserId(user);
        _checkOwner= await iPatientStoresService.CheckOwner(userId, patientId);
        if (_checkOwner)
        {
            _patient = await iPatientStoresService.GetPatientData(patientId);
            _interview = await iInterviewStoresService.GetInterviewData(patientId);
        }


        await base.OnInitializedAsync();
    }

    void Cancel()
    {
        navigationManager.NavigateTo($"/patientdetails/{patientId}", true);
        
    }

    private async void OnValidSubmit()
    {
        _interview.ModifiedBy = userId;
        _interview.ModifiedAt = DateTime.Now;
        await iInterviewStoresService.UpdateInterview(_interview);
        navigationManager.NavigateTo($"/patientdetails/{patientId}", true);



    }


}
