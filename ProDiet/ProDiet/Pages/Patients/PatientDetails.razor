@page "/patientdetails/{Id:int}"

@using ProDiet.Services
@using Microsoft.AspNetCore.Components
@using ProDiet.Models
@using Microsoft.AspNetCore.Identity;
@using System.Security.Claims
@using Microsoft.AspNetCore.Http;
@using ProDiet.Data.Enums
@using ProDiet.Pages.Components
@inject UserManager<IdentityUser> userManager
@inject IPatientStoresService iPatientStoresService
@inject IHttpContextAccessor httpContextAccessor
@inject NavigationManager navigationManager
@inject IDialogService DialogService


@if (_patient==null)
{
    <p><em>Nie możesz wyświetlić danych tego pacjenta</em></p>
}

else
{

    <MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-6">
        <MudTabPanel Text="Dane pacjenta">
            <MudCardContent>
                <div>
                    <div>
                        <div class="d-inline pa-1 mud-theme-primary">Imię</div>
                        <div class="d-inline pa-1 mud-theme-dark">@_patient.FirstName</div>
                    </div>
                    <div>
                        <div class="d-inline pa-1 mud-theme-primary">Nazwisko</div>
                        <div class="d-inline pa-1 mud-theme-dark">@_patient.LastName</div>
                    </div>
                    <div>
                        <div class="d-inline pa-1 mud-theme-primary">Email</div>
                        <div class="d-inline pa-1 mud-theme-dark">@_patient.Email</div>
                    </div>
                    <div>
                        <div class="d-inline pa-1 mud-theme-primary">Numer telefonu</div>
                        <div class="d-inline pa-1 mud-theme-dark">@_patient.PhoneNumber</div>
                    </div>
                </div>
            </MudCardContent>
        </MudTabPanel>
        <MudTabPanel Text="Pomiary">
        <MudCardContent>
            <MudButton @onclick="()=>OpenDialog(_patient)"  Variant="Variant.Filled" Color="Color.Primary">
                Dodaj nowy pomiar ciała
            </MudButton>  

                <table class="table">
                    <thead>
                    <tr>
                        <th>Waga ciała</th>
                        <th>Wzrost</th>
                        <th>Obwód talii</th>
                        <th>Obwód bioder</th>
                        <th>Błonnik</th>
                        <th>TBF</th>
                        <th>TBW</th>
                        <th>TBM</th>
                        <th>Data pomiaru</th>
                        <th>&nbsp;</th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var _bodyMeasurement in _patient.BodyMeasurements)
                    {
                        <tr>
                            <td>@_bodyMeasurement.BodyWeight</td>
                            <td>@_bodyMeasurement.Height</td>
                            <td>@_bodyMeasurement.Waist</td>
                            <td>@_bodyMeasurement.Hips</td>
                            <td>@_bodyMeasurement.TotalBodyFat</td>
                            <td>@_bodyMeasurement.TotalBodyWater</td>
                            <td>@_bodyMeasurement.TotalBoneMineral</td>
                            <td>@_bodyMeasurement.MeasurementDate</td>
                        </tr>
                    }
                    </tbody>
                </table>
            </MudCardContent>
        </MudTabPanel>
        <MudTabPanel Text="Tab Three">
            <MudText>Content Three</MudText>
        </MudTabPanel>
        <MudTabPanel Text="Tab Disabled" Disabled="true">
            <MudText>Content Disabled</MudText>
        </MudTabPanel>
    </MudTabs>
    

   @* @if (DialogAddBodyMeasurementOpen)
    {
        <AddBodyMeasurementDialog patient="_patient"  OnClose="@OnDialogAddBodyMeasurementClose"></AddBodyMeasurementDialog>
    }*@
    
}


@code {
    private ProDiet.Models.Patient _patient { get; set; }

    [Parameter]
    public int Id { get; set; }

    private bool _checkOwner = false;

    //public bool AddBodyMeasurementDialogOpen { get; set; }

    //public bool DialogAddBodyMeasurementOpen { get; set; }

    //private async Task OnDialogAddBodyMeasurementClose(bool accepted)
    //{
    //    DialogAddBodyMeasurementOpen = false;
    //    StateHasChanged();
    ////await OnInitializedAsync();
    //    navigationManager.NavigateTo("/patientdetails/{Id}", true);

    //}


    //private void OpenAddBodyMeasurementDialog()
    //{
    //    DialogAddBodyMeasurementOpen = true;
    //    StateHasChanged();
    //}




    protected override async Task OnInitializedAsync()
    {
        var user = httpContextAccessor.HttpContext.User;
        var userId = userManager.GetUserId(user);
        _checkOwner= await iPatientStoresService.CheckOwner(userId, Id);
        if (_checkOwner)
        {
            _patient = await iPatientStoresService.GetPatientData(Id);
        }
        else
        {
            _patient = null;
        }

        base.OnInitializedAsync();
    }

    private void OpenDialog( ProDiet.Models.Patient patient)
    {
        var parameters = new DialogParameters { ["patient"]=_patient };
        DialogOptions closeOnEscapeKey = new DialogOptions() { CloseOnEscapeKey = true };
        DialogService.Show<AddBodyMeasurementDialog>("Dodaj nowy pomiar ciała",parameters, closeOnEscapeKey);

    }

}
